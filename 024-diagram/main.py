ALFABET = '123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'

def makeCanvas(N):
	result = []
	for i in range(N):
		line = ['·'] * N
		line[i] = '*'
		result.append(line)
	return result

def dumpCanvas(title,rounds,elos,inv):

	canvas = makeCanvas(len(elos))
	distances = []
	for p in range(len(elos)): distances.append([])

	for r in range(len(rounds)):
		rond = rounds[r]
		for [a,b] in rond:
			a=a-1
			b=b-1

			# canvas[inv[a]][inv[b]] = ALFABET[r]
			# canvas[inv[b]][inv[a]] = ALFABET[r]

			canvas[a][b] = ALFABET[r]
			canvas[b][a] = ALFABET[r]

			distances[a].append(abs(elos[a] - elos[b]))
			distances[b].append(abs(elos[a] - elos[b]))

	sparsenesses = []
	sparseness = 0
	antal = 0
	for p in range(len(elos)):
		if len(distances[p]) > 0:
			item = sum(distances[p])/len(distances[p])
			sparseness += sum(distances[p])
			antal += len(distances[p])
			sparsenesses.append(item)
		else:
			sparsenesses.append(0)

	print("")
	print(title)
	print('Sparseness:',round(sparseness/antal,1))

	header = ' '.join([str((i+1) % 10) for i in range(len(elos))])
	print('   ' + header)

	elos = list(elos)
	elos.sort()
	elos.reverse()

	for i in range(len(canvas)):
		row = canvas[i]
		nr = i + 1
		if nr < 10:
			nr = ' ' + str(nr)
		else:
			nr = str(nr)
		print(nr, ' '.join([str(item) for item in row]),elos[i], round(sparsenesses[i],1))
	print('   ' + header)

def chessResults(title,filename,ROUNDS):
	rounds = []
	for r in range(ROUNDS): rounds.append([])
	elos = []
	with open(filename,encoding='utf8') as f:
		lines = f.readlines()
		for p in range(len(lines)):
			line = lines[p]
			arr = line.split('\t')
			elo = int(arr[3])
			if elo==0: elo=1400
			elos.append(elo)
			for r in range(ROUNDS):
				results = []
				item = arr[5+r]
				if 'b' in item: results = item.split('b')
				if 'w' in item: results = item.split('w')
				if len(results) > 0: rounds[r].append([p,int(results[0])-1])

	dumpCanvas(title,rounds,elos,list(range(len(elos))))

def invert(arr):
	newArr = [0] * len(arr)
	for i in range(len(arr)):
		newArr[arr[i]] = i
	return newArr

def memberSchack(title,filename,ROUNDS):
	rounds = []
	for r in range(ROUNDS): rounds.append([])
	elos = []
	with open(filename,encoding='utf8') as f:
		lines = f.readlines()
		for line in lines:
			line = line.strip()
			tabs = line.count('\t')
			if tabs == 6:
				counter = 0
				arr = line.split('\t')
				id = int(arr[0])
				elo = int(arr[6])
				if elo==0: elo=1400
				elos.append(elo)
			elif tabs == 2:
				continue
			elif tabs == 0:
				counter += 1
				if counter % 2 == 1:
					if line != 'F':
						item = int(line)
						rounds[counter//2].append([id, item])

	arr = [[elos[i], i] for i in range(len(elos))]

	arr.sort()
	arr.reverse()

	for i in range(len(arr)):
		print(i+1,arr[i][0])

	inv = [b for a, b in arr]
	inv = invert(inv)

	nyaronder = []
	for rond in rounds:
		nyrond = []
		for [a,b] in rond:
			a = inv[a-1]#[0]
			b = inv[b-1]#[0]
			nyrond.append([a,b])
		nyaronder.append(nyrond)
	rounds = nyaronder

	dumpCanvas(title,rounds,elos, inv)

def drawMatrix(title, n, rounds):
	inv = list(range(81))
	canvas = makeCanvas(n)
	for i in range(len(rounds)):
		games = rounds[i]
		for [a,b] in games:
			a = inv[a]
			b = inv[b]
			canvas[a][b] = i
			canvas[b][a] = i
	dumpCanvas(title,rounds,range(1,n+1),inv)

############################

memberSchack('Tyresö Open 2024','Tyresö Open 2024.txt',8)
# drawMatrix('Dense Tyresö Open 2024', 81, [[[0,1],[1,0],[2,3],[3,2],[4,5],[5,4],[6,7],[7,6],[8,9],[9,8],[10,11],[11,10],[12,13],[13,12],[14,15],[15,14],[16,17],[17,16],[18,19],[19,18],[20,21],[21,20],[22,23],[23,22],[24,25],[25,24],[26,27],[27,26],[28,29],[29,28],[30,31],[31,30],[32,33],[33,32],[34,35],[35,34],[36,37],[37,36],[38,39],[39,38],[40,41],[41,40],[42,43],[43,42],[44,45],[45,44],[46,47],[47,46],[48,49],[49,48],[50,51],[51,50],[52,53],[53,52],[54,55],[55,54],[56,57],[58,59],[57,56],[59,58],[60,61],[61,60],[62,63],[63,62],[64,65],[65,64],[66,67],[67,66],[68,69],[69,68],[70,71],[71,70],[72,73],[73,72],[74,75],[75,74],[76,77],[77,76]],[[0,2],[1,4],[2,0],[3,5],[4,1],[5,3],[6,8],[7,9],[8,6],[9,7],[10,12],[11,13],[12,10],[13,11],[14,16],[15,17],[16,14],[17,15],[18,20],[19,21],[20,18],[21,19],[22,24],[23,25],[24,22],[25,23],[26,28],[27,29],[28,26],[29,27],[30,32],[31,33],[32,30],[33,31],[34,36],[35,37],[36,34],[37,35],[38,40],[39,41],[40,38],[41,39],[42,44],[43,45],[44,42],[45,43],[46,48],[47,49],[48,46],[49,47],[50,52],[51,53],[52,50],[53,51],[54,56],[55,57],[56,54],[58,60],[57,55],[59,61],[60,58],[61,59],[62,64],[63,65],[64,62],[65,63],[66,68],[67,69],[68,66],[69,67],[70,72],[71,73],[72,70],[73,71],[74,76],[75,77],[76,74],[77,75]],[[0,3],[1,2],[2,1],[3,0],[4,6],[5,7],[6,4],[7,5],[8,10],[9,11],[10,8],[11,9],[12,14],[13,15],[14,12],[15,13],[16,18],[17,19],[18,16],[19,17],[20,22],[21,23],[22,20],[23,21],[24,26],[25,27],[26,24],[27,25],[28,30],[29,31],[30,28],[31,29],[32,34],[33,35],[34,32],[35,33],[36,38],[37,39],[38,36],[39,37],[40,42],[41,43],[42,40],[43,41],[44,46],[45,47],[46,44],[47,45],[48,50],[49,51],[50,48],[51,49],[52,54],[53,55],[54,52],[55,53],[56,58],[58,56],[57,59],[59,57],[60,62],[61,63],[62,60],[63,61],[64,66],[65,67],[66,64],[67,65],[68,70],[69,71],[70,68],[71,69],[72,74],[73,77],[74,72],[75,76],[76,75],[77,73]],[[0,6],[1,3],[2,4],[3,1],[4,2],[5,10],[6,0],[7,8],[8,7],[9,14],[10,5],[11,12],[12,11],[13,18],[14,9],[15,16],[16,15],[17,22],[18,13],[19,20],[20,19],[21,26],[22,17],[23,24],[24,23],[25,30],[26,21],[27,28],[28,27],[29,34],[30,25],[31,32],[32,31],[33,38],[34,29],[35,36],[36,35],[37,42],[38,33],[39,40],[40,39],[41,46],[42,37],[43,44],[44,43],[45,50],[46,41],[47,48],[48,47],[49,54],[50,45],[51,52],[52,51],[53,58],[54,49],[55,56],[56,55],[58,53],[57,62],[59,60],[60,59],[61,66],[62,57],[63,64],[64,63],[65,70],[66,61],[67,68],[68,67],[69,74],[70,65],[71,75],[72,77],[73,76],[74,69],[75,71],[76,73],[77,72]],[[0,4],[1,5],[2,6],[3,7],[4,0],[5,1],[6,2],[7,3],[8,11],[9,10],[10,9],[11,8],[12,15],[13,14],[14,13],[15,12],[16,19],[17,18],[18,17],[19,16],[20,23],[21,22],[22,21],[23,20],[24,27],[25,26],[26,25],[27,24],[28,31],[29,30],[30,29],[31,28],[32,35],[33,34],[34,33],[35,32],[36,39],[37,38],[38,37],[39,36],[40,43],[41,42],[42,41],[43,40],[44,47],[45,46],[46,45],[47,44],[48,51],[49,50],[50,49],[51,48],[52,55],[53,54],[54,53],[55,52],[56,59],[58,57],[57,58],[59,56],[60,63],[61,62],[62,61],[63,60],[64,67],[65,66],[66,65],[67,64],[68,71],[69,70],[70,69],[71,68],[72,76],[73,75],[74,77],[75,73],[76,72],[77,74]],[[0,5],[1,6],[2,7],[3,4],[4,3],[5,0],[6,1],[7,2],[8,14],[9,15],[10,13],[11,16],[12,18],[13,10],[14,8],[15,9],[16,11],[17,23],[18,12],[19,24],[20,26],[21,27],[22,25],[23,17],[24,19],[25,22],[26,20],[27,21],[28,34],[29,35],[30,33],[31,36],[32,38],[33,30],[34,28],[35,29],[36,31],[37,43],[38,32],[39,44],[40,46],[41,47],[42,45],[43,37],[44,39],[45,42],[46,40],[47,41],[48,54],[49,55],[50,53],[51,56],[52,58],[53,50],[54,48],[55,49],[56,51],[58,52],[57,63],[59,64],[60,66],[61,67],[62,65],[63,57],[64,59],[65,62],[66,60],[67,61],[68,76],[69,77],[70,73],[71,74],[72,75],[73,70],[74,71],[75,72],[76,68],[77,69]],[[0,7],[1,8],[2,5],[3,6],[4,9],[5,2],[6,3],[7,0],[8,1],[9,4],[10,14],[11,15],[12,16],[13,17],[14,10],[15,11],[16,12],[17,13],[18,21],[19,22],[20,24],[21,18],[22,19],[23,26],[24,20],[25,28],[26,23],[27,30],[28,25],[29,32],[30,27],[31,34],[32,29],[33,36],[34,31],[35,38],[36,33],[37,40],[38,35],[39,42],[40,37],[41,44],[42,39],[43,46],[44,41],[45,48],[46,43],[47,50],[48,45],[49,52],[50,47],[51,54],[52,49],[53,56],[54,51],[55,58],[56,53],[58,55],[57,60],[59,62],[60,57],[61,64],[62,59],[63,66],[64,61],[65,68],[66,63],[67,72],[68,65],[69,75],[70,76],[71,77],[72,67],[73,74],[74,73],[75,69],[76,70],[77,71]]])

#chessResults('Seniorschack Stockholm KM Klassiskt 2024','KM.txt',10)
