// Generated by CoffeeScript 2.7.0
var SIZE, draw, echo, index, rad, rader, range, readCSV, readRad, setup;

echo = console.log;

range = _.range;

index = 0;

rader = [];

rad = [];

SIZE = 20;

readCSV = function() {
  var file, fileInput, reader;
  fileInput = document.getElementById('csvFileInput');
  file = fileInput.files[0];
  if (file) {
    reader = new FileReader();
    reader.onload = function(event) {
      rader = event.target.result.split('\n');
      return rad = readRad(index);
    };
    return reader.readAsText(file);
  } else {
    return echo('No file selected');
  }
};

readRad = function(index) {
  var cell, i, res;
  try {
    res = (function() {
      var k, len, ref, results;
      ref = rader[index].split(',');
      results = [];
      for (k = 0, len = ref.length; k < len; k++) {
        cell = ref[k];
        results.push(int(cell));
      }
      return results;
    })();
    echo(res);
    return res;
  } catch (error) {
    echo("problem med", index);
  }
  return (function() {
    var k, len, ref, results;
    ref = range(785);
    results = [];
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      results.push(5);
    }
    return results;
  })();
};

setup = function() {
  createCanvas(580, 580);
  noFill();
  textSize(36);
  fill(0);
  frameRate(10);
  return textAlign(CENTER, CENTER);
};

draw = function() {
  var i, j, k, l, len, len1, ref, ref1;
  background("gray");
  if (keyIsDown(LEFT_ARROW)) {
    index -= 1;
    if (index < 0) {
      index = 0;
    }
    rad = readRad(index);
  }
  if (keyIsDown(RIGHT_ARROW)) {
    index += 1;
    rad = readRad(index);
  }
  fill(0);
  textSize(10);
  if (index >= rader.length) {
    return;
  }
  ref = range(28);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    ref1 = range(28);
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      j = ref1[l];
      try {
        fill(rad[1 + 28 * i + j]);
      } catch (error) {

      }
      ellipse(SIZE + SIZE * i, SIZE + SIZE * j, SIZE);
      fill(255 - rad[1 + 28 * i + j]);
      text(rad[1 + 28 * i + j], SIZE + SIZE * i, SIZE + SIZE * j);
    }
  }
  fill('yellow');
  text(rad[0], 5, 30);
  text(str(1 + Math.floor(index / 2)) + "WB"[index % 2], 5, 70);
  return text(index, width - 5, 10);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hvd2Nzdi5qcyIsInNvdXJjZVJvb3QiOiIuLlxcIiwic291cmNlcyI6WyJjb2ZmZWVcXHNob3djc3YuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLElBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLEtBQUEsRUFBQSxHQUFBLEVBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQSxPQUFBLEVBQUEsT0FBQSxFQUFBOztBQUFBLElBQUEsR0FBTyxPQUFPLENBQUM7O0FBQ2YsS0FBQSxHQUFRLENBQUMsQ0FBQzs7QUFFVixLQUFBLEdBQVE7O0FBQ1IsS0FBQSxHQUFROztBQUNSLEdBQUEsR0FBTTs7QUFFTixJQUFBLEdBQU87O0FBRVAsT0FBQSxHQUFVLFFBQUEsQ0FBQSxDQUFBO0FBQ1YsTUFBQSxJQUFBLEVBQUEsU0FBQSxFQUFBO0VBQUMsU0FBQSxHQUFZLFFBQVEsQ0FBQyxjQUFULENBQXdCLGNBQXhCO0VBQ1osSUFBQSxHQUFPLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBRDtFQUV0QixJQUFHLElBQUg7SUFDQyxNQUFBLEdBQVMsSUFBSSxVQUFKLENBQUE7SUFDVCxNQUFNLENBQUMsTUFBUCxHQUFnQixRQUFBLENBQUMsS0FBRCxDQUFBO01BQ2YsS0FBQSxHQUFRLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEtBQXBCLENBQTBCLElBQTFCO2FBQ1IsR0FBQSxHQUFNLE9BQUEsQ0FBUSxLQUFSO0lBRlM7V0FHaEIsTUFBTSxDQUFDLFVBQVAsQ0FBa0IsSUFBbEIsRUFMRDtHQUFBLE1BQUE7V0FPQyxJQUFBLENBQUssa0JBQUwsRUFQRDs7QUFKUzs7QUFhVixPQUFBLEdBQVUsUUFBQSxDQUFDLEtBQUQsQ0FBQTtBQUNWLE1BQUEsSUFBQSxFQUFBLENBQUEsRUFBQTtBQUFDO0lBQ0MsR0FBQTs7QUFBTztBQUFBO01BQUEsS0FBQSxxQ0FBQTs7cUJBQUEsR0FBQSxDQUFJLElBQUo7TUFBQSxDQUFBOzs7SUFDUCxJQUFBLENBQUssR0FBTDtBQUNBLFdBQU8sSUFIUjtHQUlBLGFBQUE7SUFDQyxJQUFBLENBQUssYUFBTCxFQUFtQixLQUFuQixFQUREOztBQUVBOztBQUFRO0FBQUE7SUFBQSxLQUFBLHFDQUFBOzttQkFBQTtJQUFBLENBQUE7OztBQVBDOztBQVNWLEtBQUEsR0FBUSxRQUFBLENBQUEsQ0FBQTtFQUNQLFlBQUEsQ0FBYSxHQUFiLEVBQWlCLEdBQWpCO0VBQ0EsTUFBQSxDQUFBO0VBQ0EsUUFBQSxDQUFTLEVBQVQ7RUFDQSxJQUFBLENBQUssQ0FBTDtFQUNBLFNBQUEsQ0FBVSxFQUFWO1NBQ0EsU0FBQSxDQUFVLE1BQVYsRUFBaUIsTUFBakI7QUFOTzs7QUFRUixJQUFBLEdBQU8sUUFBQSxDQUFBLENBQUE7QUFDUCxNQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBLEdBQUEsRUFBQTtFQUFDLFVBQUEsQ0FBVyxNQUFYO0VBRUEsSUFBRyxTQUFBLENBQVUsVUFBVixDQUFIO0lBQ0MsS0FBQSxJQUFTO0lBQ1QsSUFBRyxLQUFBLEdBQVEsQ0FBWDtNQUFrQixLQUFBLEdBQVEsRUFBMUI7O0lBQ0EsR0FBQSxHQUFNLE9BQUEsQ0FBUSxLQUFSLEVBSFA7O0VBS0EsSUFBRyxTQUFBLENBQVUsV0FBVixDQUFIO0lBQ0MsS0FBQSxJQUFTO0lBQ1QsR0FBQSxHQUFNLE9BQUEsQ0FBUSxLQUFSLEVBRlA7O0VBSUEsSUFBQSxDQUFLLENBQUw7RUFDQSxRQUFBLENBQVMsRUFBVDtFQUNBLElBQUcsS0FBQSxJQUFTLEtBQUssQ0FBQyxNQUFsQjtBQUE4QixXQUE5Qjs7QUFDQTtFQUFBLEtBQUEscUNBQUE7O0FBQ0M7SUFBQSxLQUFBLHdDQUFBOztBQUNDO1FBQ0MsSUFBQSxDQUFLLEdBQUcsQ0FBQyxDQUFBLEdBQUksRUFBQSxHQUFLLENBQVQsR0FBYSxDQUFkLENBQVIsRUFERDtPQUVBLGFBQUE7QUFBQTs7TUFDQSxPQUFBLENBQVEsSUFBQSxHQUFPLElBQUEsR0FBTyxDQUF0QixFQUF5QixJQUFBLEdBQU8sSUFBQSxHQUFPLENBQXZDLEVBQTBDLElBQTFDO01BQ0EsSUFBQSxDQUFLLEdBQUEsR0FBSSxHQUFHLENBQUMsQ0FBQSxHQUFJLEVBQUEsR0FBSyxDQUFULEdBQWEsQ0FBZCxDQUFaO01BQ0EsSUFBQSxDQUFLLEdBQUcsQ0FBQyxDQUFBLEdBQUksRUFBQSxHQUFLLENBQVQsR0FBYSxDQUFkLENBQVIsRUFBMEIsSUFBQSxHQUFPLElBQUEsR0FBTyxDQUF4QyxFQUEyQyxJQUFBLEdBQU8sSUFBQSxHQUFPLENBQXpEO0lBTkQ7RUFERDtFQVFBLElBQUEsQ0FBSyxRQUFMO0VBQ0EsSUFBQSxDQUFLLEdBQUcsQ0FBQyxDQUFELENBQVIsRUFBWSxDQUFaLEVBQWMsRUFBZDtFQUNBLElBQUEsQ0FBSyxHQUFBLENBQUksQ0FBQSxjQUFJLFFBQVMsRUFBakIsQ0FBQSxHQUFzQixJQUFJLENBQUMsS0FBQSxHQUFRLENBQVQsQ0FBL0IsRUFBNEMsQ0FBNUMsRUFBOEMsRUFBOUM7U0FDQSxJQUFBLENBQUssS0FBTCxFQUFXLEtBQUEsR0FBTSxDQUFqQixFQUFtQixFQUFuQjtBQTFCTSIsInNvdXJjZXNDb250ZW50IjpbImVjaG8gPSBjb25zb2xlLmxvZ1xyXG5yYW5nZSA9IF8ucmFuZ2VcclxuXHJcbmluZGV4ID0gMCBcclxucmFkZXIgPSBbXVxyXG5yYWQgPSBbXVxyXG5cclxuU0laRSA9IDIwXHJcblxyXG5yZWFkQ1NWID0gLT5cclxuXHRmaWxlSW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCAnY3N2RmlsZUlucHV0J1xyXG5cdGZpbGUgPSBmaWxlSW5wdXQuZmlsZXNbMF1cclxuXHJcblx0aWYgZmlsZVxyXG5cdFx0cmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKVxyXG5cdFx0cmVhZGVyLm9ubG9hZCA9IChldmVudCkgLT5cclxuXHRcdFx0cmFkZXIgPSBldmVudC50YXJnZXQucmVzdWx0LnNwbGl0ICdcXG4nXHJcblx0XHRcdHJhZCA9IHJlYWRSYWQgaW5kZXhcclxuXHRcdHJlYWRlci5yZWFkQXNUZXh0IGZpbGVcclxuXHRlbHNlXHJcblx0XHRlY2hvICdObyBmaWxlIHNlbGVjdGVkJ1xyXG5cclxucmVhZFJhZCA9IChpbmRleCkgLT4gXHJcblx0dHJ5XHJcblx0XHRyZXMgPSAoaW50KGNlbGwpIGZvciBjZWxsIGluIHJhZGVyW2luZGV4XS5zcGxpdCAnLCcpXHJcblx0XHRlY2hvIHJlc1xyXG5cdFx0cmV0dXJuIHJlc1xyXG5cdGNhdGNoXHJcblx0XHRlY2hvIFwicHJvYmxlbSBtZWRcIixpbmRleFxyXG5cdHJldHVybiAoNSBmb3IgaSBpbiByYW5nZSg3ODUpKVxyXG5cclxuc2V0dXAgPSAtPlxyXG5cdGNyZWF0ZUNhbnZhcyA1ODAsNTgwXHJcblx0bm9GaWxsKClcclxuXHR0ZXh0U2l6ZSAzNlxyXG5cdGZpbGwgMFxyXG5cdGZyYW1lUmF0ZSAxMFxyXG5cdHRleHRBbGlnbiBDRU5URVIsQ0VOVEVSXHJcblxyXG5kcmF3ID0gLT5cclxuXHRiYWNrZ3JvdW5kIFwiZ3JheVwiXHJcblxyXG5cdGlmIGtleUlzRG93bihMRUZUX0FSUk9XKVxyXG5cdFx0aW5kZXggLT0gMVxyXG5cdFx0aWYgaW5kZXggPCAwIHRoZW4gaW5kZXggPSAwXHJcblx0XHRyYWQgPSByZWFkUmFkIGluZGV4XHJcblxyXG5cdGlmIGtleUlzRG93bihSSUdIVF9BUlJPVylcclxuXHRcdGluZGV4ICs9IDFcclxuXHRcdHJhZCA9IHJlYWRSYWQgaW5kZXhcclxuXHJcblx0ZmlsbCAwXHJcblx0dGV4dFNpemUgMTBcclxuXHRpZiBpbmRleCA+PSByYWRlci5sZW5ndGggdGhlbiByZXR1cm5cclxuXHRmb3IgaSBpbiByYW5nZSAyOFxyXG5cdFx0Zm9yIGogaW4gcmFuZ2UgMjhcclxuXHRcdFx0dHJ5XHJcblx0XHRcdFx0ZmlsbCByYWRbMSArIDI4ICogaSArIGpdXHJcblx0XHRcdGNhdGNoIFxyXG5cdFx0XHRlbGxpcHNlIFNJWkUgKyBTSVpFICogaSwgU0laRSArIFNJWkUgKiBqLCBTSVpFXHJcblx0XHRcdGZpbGwgMjU1LXJhZFsxICsgMjggKiBpICsgal1cclxuXHRcdFx0dGV4dCByYWRbMSArIDI4ICogaSArIGpdLCBTSVpFICsgU0laRSAqIGksIFNJWkUgKyBTSVpFICogalxyXG5cdGZpbGwgJ3llbGxvdydcclxuXHR0ZXh0IHJhZFswXSw1LDMwXHJcblx0dGV4dCBzdHIoMSArIGluZGV4IC8vIDIpICsgXCJXQlwiW2luZGV4ICUgMl0sIDUsNzBcclxuXHR0ZXh0IGluZGV4LHdpZHRoLTUsMTBcclxuIl19
//# sourceURL=c:\github\2024\013-create_abcdefgh\coffee\showcsv.coffee