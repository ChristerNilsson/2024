// Generated by CoffeeScript 2.7.0
var Tournament, print, range, t_distance, t_elo, t_gap, t_players, t_swiss, tournaments;

import {
  swiss_data
} from './swiss.js';

import {
  elo_data
} from './elo.js';

range = _.range;

print = console.log;

t_elo = false;

t_swiss = false;

t_distance = false;

t_gap = false;

t_players = false;

tournaments = [];

Tournament = class Tournament {
  constructor(title, color, y0, data) {
    var cells, j, len, line, lines, total, x, y;
    this.title = title;
    this.color = color;
    this.y0 = y0;
    this.data = data;
    lines = this.data.split("\n");
    this.points = [];
    total = 0;
    for (j = 0, len = lines.length; j < len; j++) {
      line = lines[j];
      cells = line.split("\t");
      x = parseInt(cells[0]);
      y = parseInt(cells[1]);
      if (x === 1400 || y === 1400) {
        continue;
      }
      total += abs(x - y);
      this.points.push([x, y]);
    }
    this.average = total / this.points.length;
    this.title += " avg=" + this.average.toFixed(0);
  }

  drawLines() {
    var j, len, p, ref, x;
    push();
    stroke('darkgray');
    ref = this.points;
    for (j = 0, len = ref.length; j < len; j++) {
      p = ref[j];
      x = p[0];
      // y = p[1]
      line(2450 - x, 0, 2450 - x, height * 2);
    }
    // line 0, 2450-y, width, 2450-y
    return pop();
  }

  draw() {
    var i, j, len, ref, ref1, ref2, results, size, x, xm, y, ym;
    i = 0;
    if (t_gap) {
      push();
      stroke('black');
      strokeWeight(sqrt(2) * this.average);
      line(0, 0, 1200, 1200);
      strokeWeight(1);
      stroke('white');
      line(0, 0, 1200, 1200);
      pop();
    }
    fill(this.color);
    stroke('black');
    text(this.title, 950, this.y0);
    ref = this.points;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      [x, y] = ref[j];
      size = 2 * sqrt(abs(x - y));
      circle(2450 - x, 2450 - y, 2 + size);
      xm = mouseX / (height / 1100);
      ym = mouseY / (height / 1100);
      if ((x - size / 2 < (ref1 = 2450 - xm) && ref1 < x + size / 2) && (y - size / 2 < (ref2 = 2450 - ym) && ref2 < y + size / 2)) {
        push();
        fill('black');
        text(`${x} vs ${y} => ${abs(x - y)}`, 950, 150 + 50 * i);
        i += 1;
        results.push(pop());
      } else {
        results.push(void 0);
      }
    }
    return results;
  }

};

window.setup = function() {
  createCanvas(windowWidth - 4, windowHeight - 4);
  rectMode(CENTER);
  textAlign(CENTER, CENTER);
  textSize(32);
  tournaments.push(new Tournament("Swiss Pairing", [255, 0, 0, 128], 100, swiss_data));
  return tournaments.push(new Tournament("ELO Pairing", [0, 255, 0, 128], 50, elo_data));
};

window.draw = function() {
  var i, j, len, ref;
  background('gray');
  scale(height / 1100);
  if (t_elo || t_swiss || t_distance || t_gap || t_players) {
    if (t_distance) {
      ref = range(-13, 13);
      for (j = 0, len = ref.length; j < len; j++) {
        i = ref[j];
        stroke('yellow');
        line(0, 0 + i * 100, 1200, 1200 + i * 100);
      }
    }
    if (t_players) {
      tournaments[0].drawLines();
    }
    if (t_swiss) {
      tournaments[0].draw();
    }
    if (t_elo) {
      return tournaments[1].draw();
    }
  } else {
    fill('black');
    noStroke();
    text("e = elo", width / 2, 100);
    text("s = swiss", width / 2, 200);
    text("d = distance", width / 2, 300);
    text("g = gap", width / 2, 400);
    return text("p = players", width / 2, 500);
  }
};

window.keyPressed = function() {
  if (key === 'e') {
    t_elo = !t_elo;
  }
  if (key === 's') {
    t_swiss = !t_swiss;
  }
  if (key === 'd') {
    t_distance = !t_distance;
  }
  if (key === 'g') {
    t_gap = !t_gap;
  }
  if (key === 'p') {
    return t_players = !t_players;
  }
};

window.windowResized = function() {
  return resizeCanvas(windowWidth - 4, windowHeight - 4);
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2024\027-BubbleChart\coffee\sketch.coffee