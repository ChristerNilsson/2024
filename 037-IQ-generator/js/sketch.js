// Generated by CoffeeScript 2.7.0
var BITS, abcd, answers, bg, buttons, correct, draw, drawbit, echo, facit, figures, newProblem, points, pressed, range, show, start, wrong;

BITS = 12;

range = _.range;

echo = console.log;

bg = 'green';

abcd = [];

figures = [];

answers = [];

facit = 0;

correct = 0;

wrong = 0;

start = new Date();

pressed = false;

points = [];

points.push([10, 10]);

points.push([50, 10]);

points.push([90, 10]);

points.push([10, 50]);

points.push([50, 50]);

points.push([90, 50]);

points.push([10, 90]);

points.push([50, 90]);

points.push([90, 90]);

newProblem = function() {
  var i, k, len, ref;
  figures = [];
  ref = range(9);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    figures.push(_.sample(range(2 ** BITS)));
  }
  abcd = [0, 0, 0, 0, 0, 0, 0, 0, 0];
  abcd[0] = figures[0];
  abcd[1] = figures[1];
  abcd[3] = figures[2];
  abcd[4] = figures[3];
  abcd[2] = abcd[0] ^ abcd[1];
  abcd[5] = abcd[3] ^ abcd[4];
  abcd[6] = abcd[0] ^ abcd[3];
  abcd[7] = abcd[1] ^ abcd[4];
  abcd[8] = abcd[2] ^ abcd[5];
  answers = [];
  answers.push(figures[4]);
  answers.push(figures[5]);
  answers.push(figures[6]);
  answers.push(figures[7]);
  answers.push(figures[8]);
  answers.push(abcd[8]);
  answers = _.shuffle(answers);
  facit = answers.indexOf(abcd[8]);
  return draw();
};

buttons = [];

buttons.push([50, 400]);

buttons.push([150, 400]);

buttons.push([250, 400]);

buttons.push([50, 500]);

buttons.push([150, 500]);

buttons.push([250, 500]);

//### specialized for this problem
drawbit = function(i) {
  strokeWeight(3);
  fill('white');
  if (i === 0) {
    circle(50, 30, 5);
  }
  if (i === 1) {
    circle(70, 50, 5);
  }
  if (i === 2) {
    circle(50, 70, 5);
  }
  if (i === 3) {
    circle(30, 50, 5);
  }
  if (i === 4) {
    line(50, 50, 50, 10);
  }
  if (i === 5) {
    line(50, 50, 90, 50);
  }
  if (i === 6) {
    line(50, 50, 50, 90);
  }
  if (i === 7) {
    line(50, 50, 10, 50);
  }
  noFill();
  if (i === 8) {
    arc(50, 50, 80, 80, 0, HALF_PI);
  }
  if (i === 9) {
    arc(50, 50, 80, 80, HALF_PI, PI);
  }
  if (i === 10) {
    arc(50, 50, 80, 80, PI, PI + HALF_PI);
  }
  if (i === 11) {
    return arc(50, 50, 80, 80, PI + HALF_PI, PI + PI);
  }
};

//###
window.setup = function() {
  createCanvas(400, 650);
  textAlign(CENTER, CENTER);
  textSize(48);
  return newProblem();
};

show = function(pattern) {
  var ix, k, len, ref, results;
  ref = range(BITS);
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    ix = ref[k];
    if (pattern & (1 << ix)) {
      results.push(drawbit(ix));
    } else {
      results.push(void 0);
    }
  }
  return results;
};

draw = function() {
  var i, j, k, l, len, len1, len2, len3, len4, len5, len6, m, n, o, p, q, ref, ref1, ref2, ref3, ref4, ref5, ref6;
  background(bg);
  stroke('black');
  ref = range(4);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    line(50, 50 + i * 100, 350, 50 + i * 100);
    line(50 + i * 100, 350, 50 + i * 100, 50);
  }
  stroke('white');
  ref1 = range(3);
  for (l = 0, len1 = ref1.length; l < len1; l++) {
    i = ref1[l];
    ref2 = range(3);
    for (m = 0, len2 = ref2.length; m < len2; m++) {
      j = ref2[m];
      push();
      translate(50 + i * 100, 50 + j * 100);
      if (i === 2 && j === 2) {
        stroke('black');
        text('?', 50, 50);
      } else {
        show(abcd[3 * i + j]);
      }
      pop();
    }
  }
  noStroke();
  fill('yellow');
  text(`${correct} of ${correct + wrong}`, 200, 30);
  text(round((new Date() - start) / 1000, 1), 200, 630);
  fill('white');
  push();
  translate(0, 350);
  stroke('black');
  ref3 = range(3);
  for (n = 0, len3 = ref3.length; n < len3; n++) {
    i = ref3[n];
    line(50, 50 + i * 100, 350, 50 + i * 100);
  }
  ref4 = range(4);
  for (o = 0, len4 = ref4.length; o < len4; o++) {
    i = ref4[o];
    line(50 + i * 100, 250, 50 + i * 100, 50);
  }
  stroke('white');
  ref5 = range(3);
  for (p = 0, len5 = ref5.length; p < len5; p++) {
    i = ref5[p];
    ref6 = range(2);
    for (q = 0, len6 = ref6.length; q < len6; q++) {
      j = ref6[q];
      push();
      translate(50 + i * 100, 50 + j * 100);
      show(answers[i + 3 * j]);
      pop();
    }
  }
  return pop();
};

window.mousePressed = function() {
  var i, k, len, ref, results, x, y;
  if (pressed) {
    return;
  }
  pressed = true;
  ref = range(6);
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    [x, y] = buttons[i];
    if ((x < mouseX && mouseX < x + 100) && (y < mouseY && mouseY < y + 100)) {
      if (facit === i) {
        bg = 'green';
        correct += 1;
      } else {
        bg = 'red';
        wrong += 1;
      }
      results.push(newProblem());
    } else {
      results.push(void 0);
    }
  }
  return results;
};

window.mouseReleased = function() {
  return pressed = false;
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2024\037-IQ-generator\coffee\sketch.coffee