// Generated by CoffeeScript 2.7.0
var N, NY, XO, YO, drawForm, drawMove, drawTitle, textCol;

N = 64;

NY = 40;

XO = 120; // X Offset

YO = 200 - N; // Y Offset


// Array.prototype.clear = -> @length = 0
window.setup = function() {
  var canvas;
  canvas = createCanvas(2100, 2970);
  textAlign(CENTER, CENTER);
  rectMode(CENTER);
  return strokeCap(SQUARE);
};

drawMove = function(x, y, txt) {
  var i, k, len, ref, results;
  textSize(40);
  ref = range(15);
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    fill(i === 2 || i === 3 || i === 6 || i === 7 || i === 9 || i === 10 || i === 13 || i === 14 ? "#eee" : "#fff");
    rect(x + i * N, y, N, N);
    if (i === 0) {
      fill('black');
    } else {
      noFill();
    }
    results.push(text(txt, x + i * N, y + 0.1 * N));
  }
  return results;
};

drawTitle = function(x, y, color) {
  fill('black');
  textSize(32);
  y = y - 0.1 * N;
  text(color, x + 3 * N, y - N);
  text('KQR', x, y - N / 2);
  text('BN', x, y);
  text('a-h', x + 1 * N, y);
  text('from', x + 1.5 * N, y - N / 2);
  text('1-8', x + 2 * N, y);
  text('x', x + 3 * N, y);
  text('QR', x + 4 * N, y - N / 2);
  text('BN', x + 4 * N, y);
  text('a-h', x + 5 * N, y);
  text('to', x + 5.5 * N, y - N / 2);
  return text('1-8', x + 6 * N, y);
};

textCol = function(txt, x, y, w, h, count) {
  fill('black');
  text(txt, x, y - 0.2 * N);
  noFill();
  rect(x, y + 0.5 * N, w, h);
  if (count === 2) {
    return rect(x, y + 1.5 * N, w, h);
  }
};

drawForm = function() {
  textCol('Name', XO + 6.7 * N, YO + NY * N + 0.2 * N, 700, N, 2);
  textCol('Club', XO + 17.3 * N, YO + NY * N + 0.2 * N, 600, N, 2);
  textCol('Rating', XO + 25 * N, YO + NY * N + 0.2 * N, 200, N, 2);
  textCol('Result', XO + 28.5 * N, YO + NY * N + 0.2 * N, 100, N, 2);
  textCol('Competiton', XO + 2 * N, YO + NY * N + 3 * N, 5 * N, N, 1);
  textCol('Location', XO + 7 * N, YO + NY * N + 3 * N, 5 * N, N, 1);
  textCol('Date', XO + 12 * N, YO + NY * N + 3 * N, 5 * N, N, 1);
  textCol('Series', XO + 17 * N, YO + NY * N + 3 * N, 5 * N, N, 1);
  textCol('Round', XO + 22 * N, YO + NY * N + 3 * N, 5 * N, N, 1);
  textCol('Table', XO + 27 * N, YO + NY * N + 3 * N, 5 * N, N, 1);
  fill('black');
  text('White:', XO, YO + NY * N + 0.7 * N);
  return text('Black:', XO, YO + NY * N + 1.7 * N);
};

window.mouseClicked = function() {
  return saveCanvas('adam', 'jpg');
};

window.draw = function() {
  var i, j, k, l, len, len1, len2, m, ref, ref1, ref2, x;
  background('white');
  strokeWeight(1); //100/height
  noFill();
  ref = range(4);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    x = [0, 7 * N, 15 * N, 22 * N][i];
    drawTitle(XO + N + x, YO - 0.7 * N, ['White', 'Black'][i % 2]);
  }
  drawForm();
  ref1 = range(2);
  for (l = 0, len1 = ref1.length; l < len1; l++) {
    i = ref1[l];
    ref2 = range(NY);
    for (m = 0, len2 = ref2.length; m < len2; m++) {
      j = ref2[m];
      drawMove(XO + i * 15 * N, YO + j * N, NY * i + j + 1);
    }
  }
  strokeWeight(3);
  line(XO + 7.5 * N, YO - N / 2, XO + 7.5 * N, YO + NY * N - Math.floor(N / 2));
  line(XO + 22.5 * N, YO - N / 2, XO + 22.5 * N, YO + NY * N - Math.floor(N / 2));
  strokeWeight(5);
  return line(XO + 14.5 * N, YO - N / 2, XO + 14.5 * N, YO + NY * N - Math.floor(N / 2));
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2024\008-Berger\coffee\sketch.coffee