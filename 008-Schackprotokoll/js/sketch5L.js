// Generated by CoffeeScript 2.7.0
var NY, Unit, XN, XO, YN, YO, drawForm, range, textCol, units;

XN = 84; // size of a square

YN = 84;

NY = 20; // number of squares vertically

XO = 1.8 * XN; // X Offset

YO = (2100 - NY * YN) / 2 - 12; // Y Offset

range = _.range;

units = [];

window.setup = function() {
  var canvas;
  canvas = createCanvas(2970, 2100); // A4
  textAlign(CENTER, CENTER);
  rectMode(CENTER);
  units.push(new Unit(XO + 0 * XN, YO));
  units.push(new Unit(XO + 11 * XN, YO));
  return units.push(new Unit(XO + 22 * XN, YO));
};

Unit = class Unit {
  constructor(x1, y1) {
    this.x = x1;
    this.y = y1;
  }

  draw(i) {
    var j, k, l, len, len1, len2, m, ref, ref1, ref2, results, x, y;
    strokeWeight(1);
    ref = range(NY);
    for (k = 0, len = ref.length; k < len; k++) {
      j = ref[k];
      this.drawMove(this.x, this.y + j * YN + 0.5 * YN, NY * i + j + 1);
    }
    ref1 = range(3);
    // ver
    // for i in range 2
    // 	@drawTitle @x + XN * [1, 6][i], @y+0.75*YN, ['white','black'][i % 2]

    // for i in range 3 # ver
    // 	strokeWeight [5, 3, 5][i]
    // 	x = @x + [-0.5, 5.5, 10.5][i] * XN
    // 	line x, @y, x , @y + NY * YN
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      i = ref1[l];
      strokeWeight([5, 3, 5, 3, 5, 3, 5][i]);
      x = this.x + [-0.5, 5.5, 10.5][i] * XN;
      line(x, this.y, x, this.y + NY * YN);
    }
    ref2 = range(3);
    // hor
    results = [];
    for (m = 0, len2 = ref2.length; m < len2; m++) {
      i = ref2[m];
      strokeWeight([5, 3, 5][i]);
      y = this.y + [0, 10, 20][i] * YN;
      results.push(line(this.x - 0.5 * XN, y, this.x + 10.5 * XN, y));
    }
    return results;
  }

  // strokeWeight 3 
  // y = @y + 10 * YN
  // line @x-0.6*XN, y, @x + 10.6 * XN, y
  drawMove(x, y, txt) {
    var i, k, len, ref, results;
    textSize(40);
    fill('black');
    text(txt, x, y + 0.1 * YN);
    noFill();
    ref = range(11);
    results = [];
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      if (i > 5) {
        fill(230);
      } else {
        noFill();
      }
      results.push(rect(x + i * XN, y, XN, YN));
    }
    return results;
  }

  drawTitle(x, y, color) {
    fill(color);
    return circle(x + 1, y - 1.1 * YN, 30);
  }

};

textCol = function(txt, x, y, w, h, count) {
  fill('black');
  text(txt, x, y + 1.4 * YN);
  noFill();
  rect(x, y + 0.5 * YN, w, h, 5);
  if (count === 2) {
    return rect(x, y + 1.6 * YN, w, h, 5);
  }
};

drawForm = function() {
  var h, i, j, k, l, len, len1, len2, m, ref, ref1, ref2, t, w, x, y;
  noFill();
  circle(XO + 1 * XN, YO - 1.2 * YN, 30);
  fill('black');
  circle(XO + 17 * XN, YO - 1.2 * YN, 30);
  ref = range(2);
  for (k = 0, len = ref.length; k < len; k++) {
    j = ref[k];
    ref1 = range(4);
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      i = ref1[l];
      t = "Namn Klubb Rating Poäng".split(" ")[i];
      x = XO + XN * [5, 10.5, 13.5, 15.5][i];
      y = YO - 1.75 * YN;
      w = XN * [7, 4, 2, 2][i];
      h = YN;
      textCol(t, x + j * 16 * XN, y, w, h, 1);
    }
  }
  ref2 = range(6);
  for (m = 0, len2 = ref2.length; m < len2; m++) {
    i = ref2[m];
    t = 'Tävling Plats Klass Rond Bord Datum'.split(" ")[i];
    x = XO + XN * [2.5, 7.5, 10.5, 12.5, 14.5, 18][i];
    y = YO + YN + NY * YN - 0.5 * YN;
    w = XN * [6, 4, 2, 2, 2, 5][i];
    h = YN;
    textCol(t, x, y, w, h, 1);
  }
  fill('black');
  textSize(20);
  return text('Christer Nilsson 070 - 749 6800', 2740, 1900);
};

window.mouseClicked = function() {
  return saveCanvas('Protocol_5L', 'jpg');
};

window.draw = function() {
  var i, k, len, ref, results;
  background('white');
  strokeWeight(1);
  drawForm();
  ref = range(3);
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    results.push(units[i].draw(i));
  }
  return results;
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2024\008-Schackprotokoll\coffee\sketch5L.coffee