// Generated by CoffeeScript 2.7.0
var abcd, answers, bg, buttons, correct, draw, echo, facit, figures, i, j, l, len, len1, len2, len3, m, n, newProblem, nr, o, points, pressed, problems, range, ref, ref1, ref2, ref3, show, start, tri, wrong;

range = _.range;

echo = console.log;

pressed = false;

start = new Date();

bg = 'green';

abcd = [];

figures = [];

answers = [];

facit = 0;

correct = 0;

wrong = 0;

problems = [];

nr = 0;

newProblem = function() {
  nr = (nr + 1) % problems.length;
  while (true) {
    figures = _.sampleSize(range(1 << problems[nr].length), 9);
    abcd = [0, 0, 0, 0, 0, 0, 0, 0, 0];
    abcd[0] = figures[0];
    abcd[1] = figures[1];
    abcd[3] = figures[2];
    abcd[4] = figures[3];
    abcd[2] = abcd[0] ^ abcd[1];
    abcd[5] = abcd[3] ^ abcd[4];
    abcd[6] = abcd[0] ^ abcd[3];
    abcd[7] = abcd[1] ^ abcd[4];
    abcd[8] = abcd[2] ^ abcd[5];
    answers = [];
    answers.push(figures[4]);
    answers.push(figures[5]);
    answers.push(figures[6]);
    answers.push(figures[7]);
    answers.push(figures[8]);
    answers.push(abcd[8]);
    answers = _.uniq(answers);
    answers = _.shuffle(answers);
    facit = answers.indexOf(abcd[8]);
    if (answers.length === 6) {
      break;
    }
  }
  return draw();
};

buttons = [];

ref = [400, 500];
for (l = 0, len = ref.length; l < len; l++) {
  i = ref[l];
  ref1 = [50, 150, 250];
  for (m = 0, len1 = ref1.length; m < len1; m++) {
    j = ref1[m];
    buttons.push([j, i]);
  }
}

show = function(pattern) {
  var ix, len2, n, ref2, results;
  fill('white');
  if (nr === 0) {
    strokeWeight(3);
  } else {
    strokeWeight(1);
  }
  ref2 = range(problems[nr].length);
  results = [];
  for (n = 0, len2 = ref2.length; n < len2; n++) {
    ix = ref2[n];
    if (pattern & (1 << ix)) {
      results.push(problems[nr][ix]());
    } else {
      results.push(void 0);
    }
  }
  return results;
};

window.setup = function() {
  createCanvas(400, 650);
  textAlign(CENTER, CENTER);
  textSize(48);
  return newProblem();
};

draw = function() {
  var len2, len3, len4, len5, len6, len7, len8, n, o, p, q, r, ref2, ref3, ref4, ref5, ref6, ref7, ref8, s, t;
  background(bg);
  stroke('black');
  ref2 = range(4);
  for (n = 0, len2 = ref2.length; n < len2; n++) {
    i = ref2[n];
    line(50, 50 + i * 100, 350, 50 + i * 100);
    line(50 + i * 100, 350, 50 + i * 100, 50);
  }
  stroke('white');
  ref3 = range(3);
  for (o = 0, len3 = ref3.length; o < len3; o++) {
    i = ref3[o];
    ref4 = range(3);
    for (p = 0, len4 = ref4.length; p < len4; p++) {
      j = ref4[p];
      push();
      translate(50 + i * 100, 50 + j * 100);
      if (i === 2 && j === 2) {
        stroke('black');
        text('?', 50, 50);
      } else {
        show(abcd[3 * i + j]);
      }
      pop();
    }
  }
  noStroke();
  fill('yellow');
  text(`${correct} of ${correct + wrong}`, 200, 30);
  text(round((new Date() - start) / 1000, 1), 200, 630);
  fill('white');
  push();
  translate(0, 350);
  stroke('black');
  ref5 = range(3);
  for (q = 0, len5 = ref5.length; q < len5; q++) {
    i = ref5[q];
    line(50, 50 + i * 100, 350, 50 + i * 100);
  }
  ref6 = range(4);
  for (r = 0, len6 = ref6.length; r < len6; r++) {
    i = ref6[r];
    line(50 + i * 100, 250, 50 + i * 100, 50);
  }
  stroke('white');
  ref7 = range(3);
  for (s = 0, len7 = ref7.length; s < len7; s++) {
    i = ref7[s];
    ref8 = range(2);
    for (t = 0, len8 = ref8.length; t < len8; t++) {
      j = ref8[t];
      push();
      translate(50 + i * 100, 50 + j * 100);
      show(answers[i + 3 * j]);
      pop();
    }
  }
  return pop();
};

window.mousePressed = function() {
  var len2, n, ref2, results, x, y;
  if (pressed) {
    return;
  }
  pressed = true;
  ref2 = range(6);
  results = [];
  for (n = 0, len2 = ref2.length; n < len2; n++) {
    i = ref2[n];
    [x, y] = buttons[i];
    if ((x < mouseX && mouseX < x + 100) && (y < mouseY && mouseY < y + 100)) {
      if (facit === i) {
        bg = 'green';
        correct += 1;
      } else {
        bg = 'red';
        wrong += 1;
      }
      results.push(newProblem());
    } else {
      results.push(void 0);
    }
  }
  return results;
};

window.mouseReleased = function() {
  return pressed = false;
};

points = [];

ref2 = [10, 50, 90];
for (n = 0, len2 = ref2.length; n < len2; n++) {
  i = ref2[n];
  ref3 = [10, 50, 90];
  for (o = 0, len3 = ref3.length; o < len3; o++) {
    j = ref3[o];
    points.push([j, i]);
  }
}

tri = function(i, j, k) {
  var a, b, c;
  a = points[i];
  b = points[j];
  c = points[k];
  return triangle(a[0], a[1], b[0], b[1], c[0], c[1]);
};

problems.push([
  function() {
    return circle(50,
  30,
  5);
  },
  function() {
    return circle(70,
  50,
  5);
  },
  function() {
    return circle(50,
  70,
  5);
  },
  function() {
    return circle(30,
  50,
  5);
  },
  function() {
    return line(50,
  50,
  50,
  10);
  },
  function() {
    return line(50,
  50,
  90,
  50);
  },
  function() {
    return line(50,
  50,
  50,
  90);
  },
  function() {
    return line(50,
  50,
  10,
  50);
  },
  function() {
    noFill();
    return arc(50,
  50,
  80,
  80,
  0 * HALF_PI,
  1 * HALF_PI);
  },
  function() {
    noFill();
    return arc(50,
  50,
  80,
  80,
  1 * HALF_PI,
  2 * HALF_PI);
  },
  function() {
    noFill();
    return arc(50,
  50,
  80,
  80,
  2 * HALF_PI,
  3 * HALF_PI);
  },
  function() {
    noFill();
    return arc(50,
  50,
  80,
  80,
  4 * HALF_PI,
  4 * HALF_PI);
  }
]);

problems.push([
  function() {
    return tri(0,
  3,
  4);
  },
  function() {
    return tri(0,
  1,
  4);
  },
  function() {
    return tri(1,
  2,
  4);
  },
  function() {
    return tri(2,
  4,
  5);
  },
  function() {
    return tri(4,
  5,
  8);
  },
  function() {
    return tri(4,
  7,
  8);
  },
  function() {
    return tri(4,
  6,
  7);
  },
  function() {
    return tri(3,
  4,
  6);
  }
]);

problems.push([
  function() {
    return circle(50,
  50,
  40);
  },
  function() {
    return circle(30,
  70,
  40);
  },
  function() {
    return circle(70,
  30,
  40);
  },
  function() {
    return circle(30,
  30,
  40);
  },
  function() {
    return circle(70,
  70,
  40);
  }
]);

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2024\036-IQ-generator\coffee\sketch.coffee